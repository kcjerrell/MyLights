<UserControl x:Class="MyLights.Views.LightPanelItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:util="clr-namespace:MyLights.Util"
             xmlns:v="clr-namespace:MyLights.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="214" d:DataContext="{Binding DesignLightVM, Source={StaticResource Locator}}">

    <UserControl.Resources>

        <util:BoolToObjectsConverter x:Key="SelectedBackgroundConverter" TrueValue="#FFAAAABB" FalseValue="#FFDDDDDD"/>
        <util:BoolToObjectsConverter x:Key="PowerToOverlayOpacityConverter" TrueValue="0.0" FalseValue="0.5"/>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>

        <Style x:Key="LightPowerButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Ellipse x:Name="border" Fill="{DynamicResource LightPowerFillBrush}" 
                                     StrokeThickness="{TemplateBinding BorderThickness}" 
                                     Stroke="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                                <Ellipse.Resources>
                                    <SolidColorBrush x:Key="LightPowerFillBrush" 
                                                     Color="{Binding Power, Converter={StaticResource PowerCircleColorConverter}}"/>
                                </Ellipse.Resources>
                            </Ellipse>

                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Grid>

                        <ControlTemplate.Triggers>               

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <SolidColorBrush x:Key="LightItemBackground" 
                         Color="{Binding IsSelected, Converter={StaticResource SelectedBackgroundConverter}}"/>
        <SolidColorBrush x:Key="LightItemBorder" Color="#99000000"/>
        
    </UserControl.Resources>

    <Grid x:Name="lightItemRoot" Height="40" Margin="0,2,2,2">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding Height, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="{Binding Height, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"/>
            <ColumnDefinition Width="{Binding Height, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"/>
        </Grid.ColumnDefinitions>

        <Border x:Name="lightItemOverlay" Grid.ColumnSpan="4" Panel.ZIndex="100" CornerRadius="{Binding CornerRadius, ElementName=lightItemRight}" 
                Background="Black" IsHitTestVisible="False" Opacity="{Binding Power, Converter={StaticResource PowerToOverlayOpacityConverter}}"/>

        <Border x:Name="lightItemLeft" Grid.Column="0"  Margin="0" Background="{DynamicResource LightItemBackground}" BorderBrush="{DynamicResource LightItemBorder}" 
                BorderThickness="1,1,0,1" CornerRadius="0" Padding="4" SnapsToDevicePixels="True">
            <ToggleButton Style="{DynamicResource LightPowerButton}" IsChecked="{Binding Power}" Content="{Binding Index}" SnapsToDevicePixels="True" BorderBrush="#44222222"/>
        </Border>

        <Border x:Name="lightItemMiddle" Grid.Column="1" Grid.ColumnSpan="2" Margin="0" Background="{DynamicResource LightItemBackground}" BorderBrush="{DynamicResource LightItemBorder}"
                BorderThickness="0,1,0,1" SnapsToDevicePixels="True">
            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="8,0,0,0" Foreground="#FF222222"/>
        </Border>

        <Button Content="+" Grid.Column="2" Visibility="Collapsed" Margin="5">
            <i:Interaction.Behaviors>
                <util:SharedVisibilityBehavior GroupName="sceneEdit"/>
            </i:Interaction.Behaviors>
        </Button>

        <Border x:Name="lightItemRight" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0"
                                    Background="{Binding HSV, Converter={StaticResource BrushCache}, ConverterParameter=fullv}" 
                                    CornerRadius="0,16,16,0" BorderBrush="{DynamicResource LightItemBorder}" BorderThickness="0,1,1,1"
                                    Panel.ZIndex="0" SnapsToDevicePixels="True">
            <i:Interaction.Behaviors>
                <util:CornerRadiusAdjusterBehavior Side="Right"/>
            </i:Interaction.Behaviors>
        
        </Border>

        <Border x:Name="lightItemRightBright" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0"
                                    Background="{Binding HSV, Converter={StaticResource BrushCache}}" 
                                    CornerRadius="0,16,16,0" BorderBrush="#00000000" BorderThickness="0,1,1,1"
                                    Panel.ZIndex="20" SnapsToDevicePixels="True">            
            <i:Interaction.Behaviors>
                <util:CornerRadiusAdjusterBehavior Side="Right"/>
                <util:ItemClipBehavior ValueMax="0.0" ValueMin="1.0" Value="{Binding V}" FillDirection="Down"/>
            </i:Interaction.Behaviors>
        </Border>



    </Grid>
</UserControl>
