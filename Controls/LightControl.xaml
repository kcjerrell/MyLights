<UserControl x:Class="MyLights.Controls.LightControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ctrl="clr-namespace:MyLights.Controls" 
             xmlns:views="clr-namespace:MyLights.Views" 
             xmlns:util="clr-namespace:MyLights.Util"
             xmlns:vm="clr-namespace:MyLights.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{Binding DesignLightVM, Source={StaticResource Locator}}">

  <UserControl.Resources>

    <util:StringEqualToVisibilityConverter x:Key="StringEqualToVisibilityConverter"/>

    <!-- Templates for the Mode selector buttons -->

    <util:LightModeTemplateSelector x:Key="lightModeTemplateSelector">

      <!-- White mode -->

      <util:LightModeTemplateSelector.White>
        <DataTemplate>
          <Border Width="20" Height="20" BorderBrush="#FF444444" BorderThickness="1" CornerRadius="10" Margin="2,4">
            <Border.Background>
              <RadialGradientBrush>
                <GradientStop Color="#FFFFF5C9" Offset="0.17"/>
                <GradientStop Color="#FFDEDEFF" Offset="1"/>
              </RadialGradientBrush>
            </Border.Background>
          </Border>
        </DataTemplate>
      </util:LightModeTemplateSelector.White>

      <!-- Color mode -->

      <util:LightModeTemplateSelector.Color>
        <DataTemplate>
          <Border Width="20" Height="20" BorderBrush="#FF444444" BorderThickness="1" CornerRadius="10" Margin="2,4">
            <Border.Background>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <LinearGradientBrush.RelativeTransform>
                  <TransformGroup>
                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                    <RotateTransform Angle="270" CenterY="0.5" CenterX="0.5"/>
                    <TranslateTransform/>
                  </TransformGroup>
                </LinearGradientBrush.RelativeTransform>
                <GradientStop Color="#FFFF6161"/>
                <GradientStop Color="#FFD2FF5B" Offset="0.19"/>
                <GradientStop Color="#FF55FFF0" Offset="0.403"/>
                <GradientStop Color="#FFFF4343" Offset="1"/>
                <GradientStop Color="#FF6745FF" Offset="0.605"/>
                <GradientStop Color="#FFFF43E6" Offset="0.807"/>
              </LinearGradientBrush>
            </Border.Background>
          </Border>
        </DataTemplate>
      </util:LightModeTemplateSelector.Color>
    </util:LightModeTemplateSelector>

    <util:LightModeTemplateSelector x:Key="LightModeContentTemplateSelector">
      <util:LightModeTemplateSelector.Off>
        <DataTemplate>
          <Border>
            <TextBlock><Run Text="Off!"/></TextBlock>
          </Border>
        </DataTemplate>
      </util:LightModeTemplateSelector.Off>
      <util:LightModeTemplateSelector.Color>
        <DataTemplate>
          <Border>
            <TextBlock><Run Text="Color!"/></TextBlock>
          </Border>
        </DataTemplate>
      </util:LightModeTemplateSelector.Color>
      <util:LightModeTemplateSelector.White>
        <DataTemplate>
          <Border>
            <TextBlock><Run Text="White!"/></TextBlock>
          </Border>
        </DataTemplate>
      </util:LightModeTemplateSelector.White>
    </util:LightModeTemplateSelector>

    <!-- Binding source options for mode -->

    <ObjectDataProvider MethodName="ListOptions"
                ObjectType="{x:Type vm:ModeOptions}"
                x:Key="MyEnumValues"/>

    <!-- Style for the mode listbox -->

    <Style TargetType="{x:Type ListBoxItem}" x:Key="LightModeListBoxItemStyle">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBoxItem}">
            <Border x:Name="Border" SnapsToDevicePixels="true" BorderThickness="0" Margin="0" Padding="0" Opacity="0.7" Background="Transparent" BorderBrush="Transparent">

              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                  <VisualState x:Name="Unselected" />
                  <VisualState x:Name="Selected">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="#FFdddddd" />
                      </ColorAnimationUsingKeyFrames>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="#FFdddddd" />
                      </ColorAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ColorAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="#FFCCCCCC"/>
                      </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="InnerBorder" BorderBrush="Transparent" Padding="0" Background="Transparent">
                <ContentPresenter/>
              </Border>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </UserControl.Resources>

  <!-- Border and Grid element for LightControl -->
  
  <Border Margin="3" Padding="0,2" BorderBrush="Black" BorderThickness="1" Background="#ffbbbbbb" FocusManager.IsFocusScope="True" 
          Width="190" Height="100">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <!-- Label for the LightControl -->

      <TextBlock Text="{Binding Name}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom" Margin="2,0" FontSize="14"
                 TextOptions.TextFormattingMode="Display">
        <TextBlock.LayoutTransform>
          <RotateTransform Angle="270"/>
        </TextBlock.LayoutTransform>
      </TextBlock>

      <!-- Container for power toggle and mode selector -->

      <Border Grid.Column="1" Background="#44000000" 
                       BorderBrush="Black"                                     
                       BorderThickness="0" 
                       Padding="0" Margin="2,0">

        <StackPanel Orientation="Vertical" >

          <!-- Power toggle -->

          <ToggleButton Margin="2,4" IsChecked="{Binding Power, Mode=TwoWay}">
            <ToggleButton.Template>
              <ControlTemplate>
                <Border x:Name="powerButton" Width="20" Height="20" Background="#FF222222" BorderBrush="#FF444444" BorderThickness="1">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                      <VisualState x:Name="Unchecked"/>
                      <VisualState x:Name="Checked">
                        <Storyboard>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="powerButton"
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <EasingColorKeyFrame KeyTime="0" Value="#FFE6E689"/>

                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="indicator" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)">
                            <EasingColorKeyFrame KeyTime="0" Value="#0000FF00"/>
                          </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>

                  <Ellipse x:Name="indicator" Width="10" Height="10" Stroke="#88FF0000" StrokeThickness="2"/>

                </Border>
              </ControlTemplate>
            </ToggleButton.Template>

          </ToggleButton>

          <!-- Modes listbox -->

          <ListBox x:Name="lightModeListBox"
                       ItemsSource="{Binding Source={StaticResource MyEnumValues}}"
                       SelectedItem="{Binding Mode, Mode=TwoWay}" 
                       VerticalAlignment="Center" 
                       ItemTemplateSelector="{StaticResource lightModeTemplateSelector}"
                       ItemContainerStyle="{StaticResource LightModeListBoxItemStyle}" 
                       Background="Transparent" BorderThickness="0" Padding="0" Margin="0">

            <ListBox.ItemsPanel>
              <ItemsPanelTemplate>
                <StackPanel/>
              </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
          </ListBox>
        </StackPanel>
      </Border>

      <!-- Container for Color selector / Brightness+ColorTemp sliders -->
      
      <Grid Grid.Column="2" Margin="2,0">
        
        <!-- Color controls -->
        
      <Grid Margin="0" Visibility="{Binding Mode, Converter={StaticResource StringEqualToVisibilityConverter}, ConverterParameter=color}" >
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ctrl:XYSelector x:Name="xySelector" Panel.ZIndex="50" ValueRange="0,0,1,1"
                                          ValueX="{Binding H, Mode=TwoWay}" ValueY="{Binding S, Mode=TwoWay}" ThumbStrokeSize="1"
                                          ThumbFill="#00000000" ThumbStroke="Black" TextVisibility="Visible" BorderBrush="Black"
                                          BorderThickness="1"/>

        <ctrl:ColorSpectrum Panel.ZIndex="0" Mode="HS" ThirdValue="{Binding V, Mode=OneWay}"/>

        <Slider Grid.Row="1" Grid.Column="1" Maximum="1" LargeChange="0.1" SmallChange="0.05" Value="{Binding V, Mode=TwoWay}"/>

      </Grid>

        <!-- white controls -->
        
      <Grid Visibility="{Binding Mode, Converter={StaticResource StringEqualToVisibilityConverter}, ConverterParameter=white}">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

          <Slider Value="{Binding ColorTemp, Mode=TwoWay}" Minimum="0" Maximum="1000"/>

          <Slider Value="{Binding Brightness, Mode=TwoWay}" Grid.Row="1" Minimum="10" Maximum="1000"/>
      </Grid>
      </Grid>

      <!--<TextBlock Grid.Row="1" Text="{Binding ValueX, ElementName=xySelector, Mode=OneWay}"/>-->

    </Grid>
  </Border>
</UserControl>
